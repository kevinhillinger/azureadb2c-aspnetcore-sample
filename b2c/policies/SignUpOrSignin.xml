<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="idhack007.onmicrosoft.com"
  PolicyId="B2C_1A_signup_signin"
  PublicPolicyUri="http://idhack007.onmicrosoft.com/B2C_1A_signup_signin">

  <BasePolicy>
    <TenantId>idhack007.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
  </BasePolicy>

  <BuildingBlocks>


    <ClaimsSchema>
      <!--Sample action required: Update "Value" with your Company's Policy Version. In this Sample, we have used "v16". Change this to whatever version. -->
      <ClaimType Id="AgreedToTermsOfService">
        <DisplayName>Agreed To Terms Of Service</DisplayName>
        <DataType>string</DataType>
        <UserInputType>CheckboxMultiSelect</UserInputType>
        <Restriction>
          <Enumeration Text="" Value="v16" />
        </Restriction>
      </ClaimType>

      <!--Sample: This the the attribute that is stored in Azure AD B2C on the user's object-->
      <ClaimType Id="extension_AgreedToTermsOfService">
        <DisplayName>This is the current business Terms of Service version</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>This is the current business Terms of Service version</AdminHelpText>
      </ClaimType>

      <!--Sample: This is a claim created dynamically for logic purposes only. It is used to enforce your company's current TOS version-->
      <ClaimType Id="policyTOSversion">
        <DisplayName>This is the current business Terms of Service version</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>This is the current business Terms of Service version</AdminHelpText>
      </ClaimType>

      <!--Sample: This is a claim created dynamically for logic purposes only. It is used to trigger an OrchestrationStep that presents a
      TOS page to the end user during Sign-in flows only -->
      <ClaimType Id="renewalTOSrequired">
        <DisplayName>This variable states whether TOS requires to be renewed</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>This variable states whether TOS requires to be renewed</AdminHelpText>
      </ClaimType>
    </ClaimsSchema>


    <ClaimsTransformations>
      <!--Sample: This returns a boolean value assigned to "renewalTOSrequired" to determine whether the user's last accepted TOS (extension_AgreedToTermsOfService)
      equals to the current Company's TOS version (policyTOSversion). If the two variables are not equal, it will write the value "true" in the renewalTOSrequired claim.-->
      <ClaimsTransformation Id="IsTermsOfServiceRequired" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="policyTOSversion" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="NOT EQUAL" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="renewalTOSrequired" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <!--Sample: This verifies whether or not the TOS button has been selected by checking if the correct variable has been 
      assigned to the AgreedToTermsOfService button. If not selected, then "did not accept" value will be assigned to it.-->
      <ClaimsTransformation Id="AssertTOSHasBeenSelected" TransformationMethod="AssertStringClaimsAreEqual">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="AgreedToTermsOfService" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="policyTOSversion" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
        </InputParameters>
      </ClaimsTransformation>
    </ClaimsTransformations>
  </BuildingBlocks>


  <ClaimsProviders>
    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>

        <!--Sample: Provides a required Terms of Service Check-Box during sign-up-->
        <TechnicalProfile Id="LocalAccountSignUpWithLogonEmail">
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="AgreedToTermsOfService" Required="true" />
            <!--Sample: This is set to "false" by default to bypass OrchestrationStep 4 during Sign-in-->
            <OutputClaim ClaimTypeReferenceId="renewalTOSrequired" DefaultValue="false" />
          </OutputClaims>
        </TechnicalProfile>
      
        <!--Sample: AAD-UserWriteUsingLogonEmail appends the base policy by writing the value stored in claim named "AgreedToTermsOfService"
        to the AzureAD B2C directory ext attribute called "extension_AgreedToTermsOfService"-->
        <TechnicalProfile Id="AAD-UserWriteUsingLogonEmail">
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="AgreedToTermsOfService" PartnerClaimType="extension_AgreedToTermsOfService" />
          </PersistedClaims>
        </TechnicalProfile>
        
        <!--Sample: This TP sets the company's policy version, reads the directory for user's TOS version, and determines whether it is required for renewal  -->
        <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
          <DisplayName>Local Account Signin</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="SignUpTarget">SignUpWithLogonEmailExchange</Item>
            <Item Key="setting.operatingMode">Email</Item>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" />
            <InputClaim ClaimTypeReferenceId="policyTOSversion" DefaultValue="v16" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="policyTOSversion" DefaultValue="v16" />
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="password" Required="true" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <!--Sample: IsTermsOfServiceRequired Outputs a boolean check to compare whether renewal is required by 
            checking the user's last accepted TOS version (extension_AgreedToTermsOfService) and the Company's policy (policyTOSversion)-->
            <OutputClaimsTransformation ReferenceId="IsTermsOfServiceRequired" />
          </OutputClaimsTransformations>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="login-NonInteractive" />
            <!--Sample: AAD-ReadTOS Reads Azure AD B2C directory and pulls the user's last accepted TOS version (extension_AgreedToTermsOfService)-->
            <ValidationTechnicalProfile ReferenceId="AAD-ReadTOS" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>
        
        <TechnicalProfile Id="AAD-ReadTOS">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>


    <ClaimsProvider>
      <DisplayName>Self Asserted Terms And Use Refresh if Not Valid</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="SelfAsserted-RefreshTOS">
          <DisplayName>Terms And Use Update</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <!--Sample action required: Customize your own error message if user attempts to bypass TOS-->
            <Item Key="UserMessageIfClaimsTransformationStringsAreNotEqual">Customizable Error Message</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="AgreedToTermsOfService" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="AgreedToTermsOfService" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="VerfiyTOSConsentedTo" />
            <ValidationTechnicalProfile ReferenceId="AAD-UserWriteProfileUsingObjectIdUpdateTOU" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    
    <ClaimsProvider>
      <DisplayName>Write Updated Terms of Service</DisplayName>
      <TechnicalProfiles>

        <!--Sample:Verifies TOS Button was clicked before hitting Submit. If user does not, it tells the previous TechnicalProfile to render
        a custom error.-->
        <TechnicalProfile Id="VerfiyTOSConsentedTo">
          <DisplayName>Verifies TOS has been Accepted </DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AssertTOSHasBeenSelected" />
          </OutputClaimsTransformations>
        </TechnicalProfile>
        
        <!--Sample: ValidationTechnicalProfile that updates the  authenticated user's renewal TOS into the Azure AD B2C directory-->
        <TechnicalProfile Id="AAD-UserWriteProfileUsingObjectIdUpdateTOU">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <!--Sample: Takes the value stored in "AgreedToTermsOfService" and writes to the known B2C directory extension "extension_AgreedToTermsOfService"-->
            <PersistedClaim ClaimTypeReferenceId="AgreedToTermsOfService" PartnerClaimType="extension_AgreedToTermsOfService" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <!--Sample: CheckTOSrequire is a Sign-in auth flow check that sets whether a TOS has changed since last TOS acceptance.
        A boolean variable is set onto "renewalTOSrequired" claim that is latered used in an OrchestrationStep to ask the user to accept new TOS -->
        <TechnicalProfile Id="CheckTOSrequirement">
          <DisplayName> Check TOS Requirement </DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="policyTOSversion" Required="true" />
            <InputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="renewalTOSrequired" />
            <OutputClaim ClaimTypeReferenceId="policyTOSversion" />
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="IsTermsOfServiceRequired" />
          </OutputClaimsTransformations>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
  </ClaimsProviders>


  <UserJourneys>
    <UserJourney Id="TermsOfServiceSignUpOrSignIn">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection ValidationClaimsExchangeId="LocalAccountSigninEmailExchange" />
          </ClaimsProviderSelections>
          <ClaimsExchanges>
            <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="LocalAccountSignUpWithLogonEmail" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <!-- This step reads any user attributes that we may not have received when in hte token. -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <!--Sample: Will redirect user to a TOS acceptance page if earlier claim transformation has determined required -->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>renewalTOSrequired</Value>
              <Value>False</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="RefreshTOS" TechnicalProfileReferenceId="SelfAsserted-RefreshTOS" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <!--Sample: This steps reads the directory again to refresh the variable of the TOS stored on the user object. If you do not plan
        on sending the TOS version in a claim to the application, you can remove this step.-->
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AAD-ReadTOS" TechnicalProfileReferenceId="AAD-ReadTOS" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <OrchestrationStep Order="6" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>
  </UserJourneys>


  
  <RelyingParty>
    <DefaultUserJourney ReferenceId="TermsOfServiceSignUpOrSignIn" />
    <TechnicalProfile Id="PolicyProfile">
      <DisplayName>PolicyProfile</DisplayName>
      <Protocol Name="OpenIdConnect" />
      <OutputClaims>
        <!--Sample: Additional claims are not required and were used for testing purposes only -->        
        <!--Sample action Required: Remove after testing--><OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" />
        <!--Sample action Required: Remove after testing--><OutputClaim ClaimTypeReferenceId="policyTOSversion" />
        <!--Sample action Required: Remove after testing--><OutputClaim ClaimTypeReferenceId="renewalTOSrequired" />
        <OutputClaim ClaimTypeReferenceId="email" />
        <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub" />
        <OutputClaim ClaimTypeReferenceId="tenantId" AlwaysUseDefaultValue="true" DefaultValue="{Policy:TenantObjectId}" />
      </OutputClaims>
      <SubjectNamingInfo ClaimType="sub" />
    </TechnicalProfile>
  </RelyingParty>
</TrustFrameworkPolicy>



